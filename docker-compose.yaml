services:
  # storage-mgmt-service:
  #   build:
  #     context: .
  #     dockerfile: ./apps/service-mgmt-service/Dockerfile
  #     target: development
  #   command: npm run start:dev storage-mgmt-service
  #   env_file:
  #     - ./apps/storage-mgmt-service/.env
  #   depends_on:
  #     - mongo
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '3000:3000'
  #   networks:
  #     - net

  # user-mgmt-service:
  #   build:
  #     context: .
  #     dockerfile: ./apps/user-acc-mgmt-service/Dockerfile
  #     target: development
  #   command: npm run start:dev user-mgmt-service
  #   env_file:
  #     - ./apps/user-acc-mgmt-service/.env
  #   depends_on:
  #     - mongo
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '4000:4000'
  #   networks:
  #     - net

  # usage-mgmt-service:
  #   build:
  #     context: .
  #     dockerfile: ./apps/usage-mgmt-service/Dockerfile
  #     target: development
  #   command: npm run start:dev usage-mgmt-service
  #   env_file:
  #     - ./apps/usage-mgmt-service/.env
  #   depends_on:
  #     - mongo
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '5000:5000'
  #   networks:
  #     - net
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    network_mode: host

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@localhost:27017/
      ME_CONFIG_BASICAUTH: false
    network_mode: host
    # networks:
    #   - net
# networks:
#   net:
#     name: net
